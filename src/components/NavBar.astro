---
import youtubeChannels from "../data/channels.json";
const youtubeApi = import.meta.env.PUBLIC_YOUTUBE_API;
---

<nav class="menu-channels">
  <ul>
    {
      youtubeChannels.map((channel) => (
        <li>
          <a href="#" data-youtube={channel.id}>
            <img src={channel.logo} alt={channel.name} />
            {channel.name}
          </a>
        </li>
      ))
    }
  </ul>
</nav>

<script define:vars={{ youtubeApi }}>
  // Agrega is-live a cada elemento del menu si emite en vivo
  // utiliza video.actualStartTime && !video.actualEndTime de la api

  document.addEventListener("DOMContentLoaded", async function () {
    const menuChannelsListNav = document.querySelectorAll(".menu-channels a");

    async function init(){
      const promises = [...menuChannelsListNav].map(async (menuItem) => {
        const youtubeId = menuItem.getAttribute("data-youtube");
        await checkVideoOnline(youtubeId, menuItem);
      });
      await Promise.all(promises); // Esperar que todas las promesas se resuelvan
      console.log("init completo");
      
    }

    async function order() {
        console.log("order")
    } 

    async function checkVideoOnline(youtubeId = "", menuVideoItem) {
      const apiKey = youtubeApi;
      const url = `https://www.googleapis.com/youtube/v3/videos?id=${youtubeId}&part=liveStreamingDetails&key=${apiKey}`;
      try {
        const response = await fetch(url);
        const data = await response.json();
        if (data.items && data.items.length > 0) {
          const video = data.items[0].liveStreamingDetails;
          if (video.actualStartTime && !video.actualEndTime) {
            console.log("El video está en vivo");
            menuVideoItem.classList.add("is-live");
          } else {
            console.log("El video no está en vivo");
          }
        } else {
          console.error("No se encontró el video");
        }
      } catch (error) {
        console.error("Error fetching video details:", error);
      }
    }

    await init();
    await order();
   
  });
  
</script>
